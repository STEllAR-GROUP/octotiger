#!groovy

//  Copyright (c) 2021-2023 Gregor Dai√ü
//
//  Distributed under the Boost Software License, Version 1.0. (See accompanying
//  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

def buildbadge = addEmbeddableBadgeConfiguration(id: "nodelevel", subject: "CPU / GPU Node-Level Tests", status: "skipped")

pipeline {
    agent any

    options {
        buildDiscarder(
            logRotator(
                daysToKeepStr: "28",
                numToKeepStr: "100",
                artifactDaysToKeepStr: "28",
                artifactNumToKeepStr: "100"
            )
        )
        disableConcurrentBuilds()
    }
    environment {
        GITHUB_TOKEN = credentials('GITHUB_TOKEN_OCTOTIGER')
        MAINTAINER_MAIL = credentials('OCTOTIGER_MAINTAINER_EMAIL')
    }
    stages {
        stage('checkout') {
            steps {
                script {
                    buildbadge.setStatus('running')
                }
                dir('octotiger') {
                    checkout scm
                    sh '''
                        cd octotiger
                        git submodule update --init --recursive
                        cd ..
                    '''
                }
            }
        }
        stage('build') {
            matrix {
                axes {
                    axis {
                        name 'build_spec'
                        // List of "tuples" containing the test run infomation
                        // Format: 
                        // spack octotiger spec ; run name ; required modules ; SLURM partition for this test ; additional flags for spack dev-build
                        values ' +cuda +kokkos cuda_arch=70  %gcc@11 ^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc  %gcc@11 ^cppuddle %gcc@11 ^hpx-kokkos %gcc@11 ^kokkos@4.0.01 %gcc@11 ^silo~mpi ;with-CC-with-cuda-with-kokkos;gcc/11 cuda/12;cuda-V100 --gpus=1 --exclusive;--fresh',\
                               ' +cuda +kokkos cuda_arch=70 griddim=16  %gcc@11 ^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %gcc@11 ^cppuddle %gcc@11 ^hpx-kokkos %gcc@11^kokkos@4.0.01 %gcc@11 ^silo~mpi ;with-CC-with-cuda-with-kokkos-griddim16;gcc/11 cuda/12;cuda-V100 --gpus=1 --exclusive;--fresh',\
                               ' ~cuda +kokkos  %gcc@11 ^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %gcc@11 ^cppuddle %gcc@11 ^hpx-kokkos %gcc@11 ^kokkos@4.0.01~cuda %gcc@11 ^silo~mpi ;with-CC-without-cuda-with-kokkos;gcc/11 cuda/12;cuda-V100 --gpus=1 --exclusive;--fresh',\
                               ' +cuda ~kokkos cuda_arch=70 ^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %gcc@11 ^cppuddle %gcc@11 ^silo~mpi %gcc@11 ;with-CC-with-cuda-without-kokkos;gcc/11 cuda/12;cuda-V100 --gpus=1 --exclusive;--fresh',\
                               ' ~cuda ~kokkos  %gcc@11 ^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %gcc@11 ^cppuddle %gcc@11 ^silo~mpi ;with-CC-without-cuda-without-kokkos;gcc/11 cuda/12;cuda-V100 --gpus=1 --exclusive;--fresh',\
                               ' +cuda +kokkos cuda_arch=70  %clang@12 ^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %clang@12 ^cppuddle %clang@12 ^hpx-kokkos %clang@12 ^kokkos %clang@12 ^silo~mpi ;with-CC-clang-with-cuda-with-kokkos;llvm/12 cuda/12;cuda-V100 --gpus=1 --exclusive;--fresh',\
                               ' +cuda +kokkos cuda_arch=70 griddim=16  %clang@12 ^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %clang@12 ^cppuddle %clang@12 ^hpx-kokkos %clang@12 ^kokkos %clang@12^silo~mpi ;with-CC-clang-with-cuda-with-kokkos-griddim16;llvm/12 cuda/12;cuda-V100 --gpus=1 --exclusive;--fresh',\
                               ' ~cuda +kokkos  %clang@12^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %clang@12 ^cppuddle %clang@12 ^hpx-kokkos %clang@12 ^kokkos %clang@12 ^silo~mpi ;with-CC-clang-without-cuda-with-kokkos;llvm/12 cuda/12;cuda-V100 --gpus=1 --exclusive;--fresh',\
                               ' +cuda ~kokkos cuda_arch=70  %clang@12 ^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %clang@12 ^cppuddle %clang@12 ^silo~mpi ;with-CC-clang-with-cuda-without-kokkos;llvm/12 cuda/12;cuda-V100 --gpus=1 --exclusive;--fresh',\
                               ' ~cuda ~kokkos  %clang@12 ^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %clang@12 ^cppuddle %clang@12 ^silo~mpi ;with-CC-clang-without-cuda-without-kokkos;llvm/12 cuda/12;cuda-V100 --gpus=1 --exclusive;--fresh',\
                               ' +rocm+kokkos amdgpu_target=gfx908 %rocmcc@5.7.3 ^asio@1.16.0^hpx@1.9.1 max_cpu_count=128 amdgpu_target=gfx908 %rocmcc@5.7.3 ^kokkos@4.1.00 amdgpu_target=gfx908 %rocmcc@5.7.3 ^hip@5.7.3 ^hsa-rocr-dev@5.7.3 ^llvm-amdgpu@5.7.3 ^cppuddle %rocmcc@5.7.3 ^hpx-kokkos %rocmcc@5.7.3 ^silo~mpi %gcc@11 ;with-CC-clang-with-hip-with-kokkos;rocm/5.7.3 gcc/11;jenkins-amdgpu --exclusive -c 16 --threads-per-core=1;--fresh --dirty',\
                               ' +kokkos simd_extension=SCALAR simd_library=STD  %gcc@11^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %gcc@11 ^kokkos %gcc@11 ^hpx-kokkos %gcc@11 ^cppuddle %gcc@11 ^silo~mpi ;with-CC-with-std-with-scalar;gcc/11;medusa --exclusive;--fresh',\
                               ' +kokkos simd_extension=AVX512 simd_library=STD  %gcc@11^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %gcc@11 ^kokkos %gcc@11 ^hpx-kokkos %gcc@11 ^cppuddle %gcc@11 ^silo~mpi ;with-CC-with-std-with-avx512;gcc/11;medusa --exclusive;--fresh',\
                               ' +kokkos +kokkos_hpx_kernels multipole_host_tasks=16 monopole_host_tasks=4 hydro_host_tasks=4 simd_extension=AVX512 simd_library=STD  %gcc@11^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %gcc@11 ^kokkos %gcc@11 ^hpx-kokkos %gcc@11 ^cppuddle %gcc@11 ^silo~mpi ;with-CC-with-std-with-avx512-with-hpx-kokkos-kernels;gcc/11;medusa --exclusive;--fresh',\
                               ' +kokkos simd_extension=SCALAR simd_library=KOKKOS  %gcc@11^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %gcc@11 ^kokkos %gcc@11 ^hpx-kokkos %gcc@11 ^cppuddle %gcc@11 ^silo~mpi ;with-CC-with-kokkos-with-scalar;gcc/11;medusa --exclusive;--fresh',\
                               ' +kokkos simd_extension=AVX512 simd_library=KOKKOS  %gcc@11^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %gcc@11 ^kokkos %gcc@11 ^hpx-kokkos %gcc@11 ^cppuddle %gcc@11 ^silo~mpi ;with-CC-with-kokkos-with-avx512;gcc/11;medusa --exclusive;--fresh',\
                               ' +kokkos +kokkos_hpx_kernels multipole_host_tasks=16 monopole_host_tasks=4 hydro_host_tasks=4 simd_extension=AVX512 simd_library=KOKKOS  %gcc@11^hpx@1.9.1 max_cpu_count=128 malloc=jemalloc %gcc@11 ^kokkos %gcc@11 ^hpx-kokkos %gcc@11 ^cppuddle %gcc@11 ^silo~mpi ;with-CC-with-kokkos-with-avx512-with-hpx-kokkos-kernels;gcc/11;medusa --exclusive;--fresh',\
                               ' -cuda -rocm +sycl  %gcc@11 ^kokkos@4.0.01 use_unsupported_sycl_arch=70 ^hpx@1.9.1 sycl_target_arch=70;with-CC-with-kokkos-with-sycl;gcc/11 cuda/12;cuda-V100 -w diablo --gpus=1 -c 10 --exclusive;--fresh'
                    }
                }
                stages {
                    stage('init') {
                        steps {
                            dir('octotiger') {
                                sh '''
                                # Unpack tuples:
                                spack_spec=$(echo "${build_spec}" | cut -d ";" -f 1)
                                build_description=$(echo "${build_spec}" | cut -d ";" -f 2)
                                github_token=$(echo ${GITHUB_TOKEN} | cut -f2 -d':')
                                curl --verbose\
                                    --request POST \
                                    --url "https://api.github.com/repos/STEllAR-GROUP/octotiger/statuses/$GIT_COMMIT" \
                                    --header "Content-Type: application/json" \
                                    --header "authorization: Bearer ${github_token}" \
                                    --data "{
                                        \\"state\\": \\"pending\\",
                                        \\"context\\": \\"jenkins-${build_description}\\",
                                        \\"description\\": \\"Jenkins CI Job: ${build_description}\\",
                                        \\"target_url\\": \\"https://rostam.cct.lsu.edu/jenkins/job/Octo-Tiger%20Node-Level/job/$JOB_BASE_NAME/$BUILD_NUMBER/console\\"
                                    }"
                                '''
                            }
                        }
                    }
                    stage('build-and-test') {
                        steps {
                            dir('octotiger') {
                                sh '''
                                #!/bin/bash -l
                                set -x
                                # Unpack tuples:
                                spack_spec=$(echo "${build_spec}" | cut -d ";" -f 1)
                                build_description=$(echo "${build_spec}" | cut -d ";" -f 2)
                                required_modules=$(echo "${build_spec}" | cut -d ";" -f 3)
                                slurm_partition=$(echo "${build_spec}" | cut -d ";" -f 4)
                                extra_spack_flags=$(echo "${build_spec}" | cut -d ";" -f 5)
                                # Setup Spack
                                # The jenkins_spack_install folder is initialized by a separate, manual jenkisn pipeline
                                source ${HOME}/jenkins_spack_install/share/spack/setup-env.sh
                                cd ..
                                # Setup src to test
                                rm -rf octotiger-${build_description}
                                cp -r octotiger octotiger-${build_description}
                                cd octotiger-${build_description}
                                # Runs test on node
                                # We do not use --fresh builds as these tend to act up and suddenly ignore external packages
                                # which is a problem in the hip node
                                srun -p ${slurm_partition} -N 1 -n 1 --time=900 bash -lc "\
                                  module load ${required_modules} && \
                                  export TMPDIR=/work/jenkins/spack_tmp && \
                                  flock --verbose -x -w 600 /work/jenkins/jenkins-spack-config.lock spack external find && \
                                  flock --verbose -x -w 600 /work/jenkins/jenkins-spack-config.lock spack external find cmake git libffi python && \
                                  flock --verbose -x -w 600 /work/jenkins/jenkins-spack-config.lock spack external find cuda hip llvm-amdgpu hsa-rocr-dev && \
                                  flock --verbose -x -w 600 /work/jenkins/jenkins-spack-config.lock spack compiler find  
                                  spack spec --fresh octotiger@develop ${spack_spec} && \
                                  export AMD_DIRECT_DISPATCH=0 && \
                                  export HIP_VISIBLE_DEVICES=1 && \
                                  spack dev-build -j32 ${extra_spack_flags} --until build --test=root octotiger@develop ${spack_spec} || {
                                    cat install-time-test-log.txt
                                    exit 1 # test failed 
                                  } && cat install-time-test-log.txt"
                                '''
                            }
                        }
                    }
                }
                post {
                    success {
                        sh '''
                        build_description=$(echo "${build_spec}" | cut -d ";" -f 2)
                        github_token=$(echo ${GITHUB_TOKEN} | cut -f2 -d':')
                        curl --verbose\
                            --request POST \
                            --url "https://api.github.com/repos/STEllAR-GROUP/octotiger/statuses/$GIT_COMMIT" \
                            --header "Content-Type: application/json" \
                            --header "authorization: Bearer ${github_token}" \
                            --data "{
                                \\"state\\": \\"success\\",
                                \\"context\\": \\"jenkins-${build_description}\\",
                                \\"description\\": \\"Jenkins CI Job: ${build_description}\\",
                                \\"target_url\\": \\"https://rostam.cct.lsu.edu/jenkins/job/Octo-Tiger%20Node-Level/job/$JOB_BASE_NAME/$BUILD_NUMBER/console\\"
                            }"
                        '''
                    }
                    failure {
                        sh '''
                        build_description=$(echo "${build_spec}" | cut -d ";" -f 2)
                        github_token=$(echo ${GITHUB_TOKEN} | cut -f2 -d':')
                        curl --verbose\
                            --request POST \
                            --url "https://api.github.com/repos/STEllAR-GROUP/octotiger/statuses/$GIT_COMMIT" \
                            --header "Content-Type: application/json" \
                            --header "authorization: Bearer ${github_token}" \
                            --data "{
                                \\"state\\": \\"failure\\",
                                \\"context\\": \\"jenkins-${build_description}\\",
                                \\"description\\": \\"Jenkins CI Job: ${build_description}\\",
                                \\"target_url\\": \\"https://rostam.cct.lsu.edu/jenkins/job/Octo-Tiger%20Node-Level/job/$JOB_BASE_NAME/$BUILD_NUMBER/console\\"
                            }"
                        '''
                    }
                    aborted {
                        sh '''
                        build_description=$(echo "${build_spec}" | cut -d ";" -f 2)
                        github_token=$(echo ${GITHUB_TOKEN} | cut -f2 -d':')
                        curl --verbose\
                            --request POST \
                            --url "https://api.github.com/repos/STEllAR-GROUP/octotiger/statuses/$GIT_COMMIT" \
                            --header "Content-Type: application/json" \
                            --header "authorization: Bearer ${github_token}" \
                            --data "{
                                \\"state\\": \\"error\\",
                                \\"context\\": \\"jenkins-${build_description}\\",
                                \\"description\\": \\"Jenkins CI Job: ${build_description}\\",
                                \\"target_url\\": \\"https://rostam.cct.lsu.edu/jenkins/job/Octo-Tiger%20Node-Level/job/$JOB_BASE_NAME/$BUILD_NUMBER/console\\"
                            }"
                        '''
                    }
                }
            }
        }
    }
    post {
        success {
            script {
                buildbadge.setStatus('success')
            }
        }
        failure {
            script {
                buildbadge.setStatus('failing')
            }
            sh '''
                echo "Build failed! Pipeline ${JOB_BASE_NAME} with build ID ${BUILD_NUMBER} using GIT commit ${GIT_COMMIT}" | mail -s "Jenkins Octo-Tiger Node-Level Tests: Build ${JOB_BASE_NAME}/${BUILD_NUMBER} failed" "${MAINTAINER_MAIL}"
            '''
        }
        aborted {
            script {
                buildbadge.setStatus('aborted')
            }
            sh '''
                echo "Build aborted on pipeline ${JOB_BASE_NAME} with build ID ${BUILD_NUMBER} using GIT commit ${GIT_COMMIT}" | mail -s "Jenkins Octo-Tiger Node-Level Tests: Build ${JOB_BASE_NAME}/${BUILD_NUMBER} aborted" "${MAINTAINER_MAIL}"
            '''
        }
    }
}
