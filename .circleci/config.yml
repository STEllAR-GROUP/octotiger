# Copyright (c) 2017 David Pfander
# Copyright (c) 2017-2018 Patrick Diehl
# Copyright (c) 2017-2019 Dominic Marcello
# Copyright (c) 2019 Parsa Amini
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

version: 2

anchors:
    - &docker_config
        docker:
            - image: stellargroup/octotiger:prerequisites-gcc8
    - &ignore_docs
        filters:
            branches:
                ignore:
                    - gh-pages

jobs:
    build:
        <<: *docker_config
        steps:
            - checkout:
                path: /octotiger
            - run:
                name: Get reference data submodule
                command: cd /octotiger && git submodule update --init --recursive && cd ..
            - run:
                name: Checkout CPPuddle
                command: git clone https://github.com/G-071/hpx-kokkos-interopt-WIP.git cppuddle
            - run: 
                name: Create CPPuddle installation directory
                command: mkdir cppuddle-install
            - run:
                name: Configure CPPuddle
                command: cmake -Hcppuddle -Bcppuddle/build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=cppuddle-install
            - run:
                name: Build CPPuddle
                command: cmake --build cppuddle/build -- -j 2 VERBOSE=1
            - run:
                name: Install CPPuddle
                command: cmake --build cppuddle/build --target install
            - run:
                name: Configure Octo-Tiger
                command: |
                    cmake -H/octotiger -B/octotiger/build \
                          -DCMAKE_BUILD_TYPE=Release \
                          -DHPX_DIR=/local/hpx/lib/cmake/HPX \
                          -DVc_DIR=/local/vc/lib/cmake/Vc \
                          -DCPPuddle_DIR=/root/project/cppuddle-install/lib/cmake/CPPuddle \
                          -DSilo_DIR=/local/silo \
                          -DHDF5_ROOT=/local/hdf5 \
                          -DBOOST_ROOT=/local/boost \
                          -DOCTOTIGER_WITH_Vc=OFF \
                          -DOCTOTIGER_WITH_DOCU=ON \
                          -GNinja
            - run:
                name: Build
                command: cmake --build /octotiger/build -- -j2
            - run:
                name: Install CPPuddle lib to persistent octotiger directory
                command: |
                    cp cppuddle-install/lib/libbuffer_manager.so /octotiger/build/libbuffer_manager.so
                    cp cppuddle-install/lib/libstream_manager.so /octotiger/build/libstream_manager.so
            - run:
                name: Documentation
                command: cmake --build /octotiger/build -- doc
            - persist_to_workspace:
                root: /
                paths:
                    - octotiger/build
                    - cppuddle/build
                    - cppuddle-install

    test_marshak:
        <<: *docker_config
        working_directory: /octotiger/build
        steps:
            - checkout:
                path: /octotiger
            - attach_workspace:
                at: /
            - run:
                name: Marshak wave test
                command: ctest --output-on-failure -R test_problems.cpu.marshak.diff
                no_output_timeout: 100m
            - run:
                name: Move artifacts
                command: |
                    mkdir /test
                    mv *.silo *.dat /test/ || :
                when: always
            - store_artifacts:
                path: /test

    test_blast:
        <<: *docker_config
        working_directory: /octotiger/build
        steps:
            - checkout:
                path: /octotiger
            - attach_workspace:
                at: /
            - run:
                name: Blast test
                command: ctest --output-on-failure -R test_problems.cpu.*.blast_legacy
                no_output_timeout: 200m
            - run:
                name: Move artifacts
                command: |
                    mkdir /test
                    mv *.silo *.dat /test/ || :
                when: always
            - store_artifacts:
                path: /test

    test_sod:
        <<: *docker_config
        working_directory: /octotiger/build
        steps:
            - checkout:
                path: /octotiger
            - attach_workspace:
                at: /
            - run:
                name: Sod shock tube test
                command: ctest --output-on-failure -R test_problems.cpu.*.sod.*_legacy
                no_output_timeout: 25m
            - run:
                name: Move artifacts
                command: |
                    mkdir /test
                    mv *.silo *.dat /test/ || :
                when: always
            - store_artifacts:
                path: /test

    test_sphere:
        <<: *docker_config
        working_directory: /octotiger/build
        steps:
            - checkout:
                path: /octotiger
            - attach_workspace:
                at: /
            - run:
                name: Solid sphere test
                command: ctest --output-on-failure -R test_problems.cpu.sphere_legacy
                no_output_timeout: 25m
            - run:
                name: Move artifacts
                command: |
                    mkdir /test
                    mv *.silo *.dat /test/ || :
                when: always
            - store_artifacts:
                path: /test

    test_rotating_star:
        <<: *docker_config
        working_directory: /octotiger/build
        steps:
            - checkout:
                path: /octotiger
            - attach_workspace:
                at: /
            - run:
                name: Rotating star test
                command: ctest --output-on-failure -R test_problems.cpu.*.rotating_star_legacy
                no_output_timeout: 25m
            - run:
                name: Move artifacts
                command: |
                    mkdir /test
                    mv *.silo *.bin *.dat /test/ || :
                when: always
            - store_artifacts:
                path: /test

    publish_documentation:
        <<: *docker_config
        working_directory: /octotiger/build
        steps:
            - checkout:
                path: /octotiger
            - attach_workspace:
                at: /
            - run:
               name: Configure git
               command: |
                        git config --global user.name "Circle CI"
                        git config --global user.email "bot@circleci.com"
                        git checkout gh-pages
            - run: 
               name: Move documentation
               command: |
                        cp -r doc/html ../doc/   
            - run:
                name: publish documentation
                command: |
                        git add ../doc/html/*
                        git commit -m "Update documentation [ci skip] " ../doc/html/* || true
                        git push  https://${TOKEN}@github.com/STEllAR-GROUP/octotiger.git || true
                no_output_timeout: 25m

workflows:
    version: 2
    build_and_test:
        jobs:
            - build:
                <<: *ignore_docs
            - test_marshak:
                requires:
                    - build
            - test_blast:
                requires:
                    - build
            - test_sod:
                requires:
                    - build
            - test_rotating_star:
                requires:
                    - build
            - test_sphere:
                requires:
                    - build
            - publish_documentation:
                requires:
                    - build
                filters:
                  branches:
                    only:
                      - main
